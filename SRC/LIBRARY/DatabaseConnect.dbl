;*****************************************************************************
;
; Routine:     DatabaseConnect
;
; Description: Connect to the database and configure the database environment.
;
; Author:      Steve Ives, Synergex Professional Services Group
;
; Created:     30th December 2019
;
;*****************************************************************************
;
; Copyright (c) 2019, Synergex International, Inc.
; All rights reserved.
;
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions are met:
;
; * Redistributions of source code must retain the above copyright notice,
;   this list of conditions and the following disclaimer.
;
; * Redistributions in binary form must reproduce the above copyright notice,
;   this list of conditions and the following disclaimer in the documentation
;   and/or other materials provided with the distribution.
;
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
; POSSIBILITY OF SUCH DAMAGE.
;
;*****************************************************************************

import ReplicationLibrary

function DatabaseConnect, boolean

    .include "CONNECTDIR:ssql.def"

    stack record
        ok,         boolean
        length,     int
        dbstatus,   int
        dberrtxt,   a1024
    endrecord
proc
    ;Connect to the database

    Logger.Log("Connecting to database...")
    if (%ssc_connect(Settings.DatabaseChannel,Settings.DatabaseConnectString)==SSQL_NORMAL) then
    begin
        Logger.Log("Connected")
        ok = true

        ;Set the SQL statement execution timeout
        Logger.Log("Setting database execution timeout to " + %string(Settings.DatabaseTimeout) + " seconds")
        if (%ssc_cmd(Settings.DatabaseChannel,,SSQL_TIMEOUT,%string(Settings.DatabaseTimeout))!=SSQL_NORMAL)
        begin
            dbstatus = %ssc_getemsg(Settings.DatabaseChannel,dberrtxt,length)
            Logger.ErrorLog("Failed to set database execution timeout to " + %string(Settings.DatabaseTimeout) + " seconds!")
            Logger.Log("Error message was: " + dberrtxt(1,length))
            ok = false

            ;If we're sending emails then let's record the error
            if (Settings.CanSendEmail())
            begin
                data body = new string[3]
                body[1] = "ERROR: Failed to set database timeout!"
                body[2] = "Specified timeout value was " + %string(Settings.DatabaseTimeout) + " seconds"
                body[3] = "Error message was:  " + dberrtxt(1,length)
                xcall SendEmail("ERROR: Replicator " + Settings.InstanceName + " failed to set database timeout!",body,false,^null)
            end
        end
    end
    else
    begin
        ;Failed to connect
        dbstatus = %ssc_getemsg(Settings.DatabaseChannel,dberrtxt,length)
        Logger.ErrorLog("Failed to connect to database!")
        Logger.Log("Connect string was: " + Settings.DatabaseConnectString)
        Logger.Log("Error message was: " + dberrtxt(1,length))
        ok = false

        ;If we're sending emails then let's record the connect failure
        if (Settings.CanSendEmail())
        begin
            data body = new string[3]
            body[1] = "ERROR: Failed to connect to database!"
            body[2] = "Connect string was: " + Settings.DatabaseConnectString
            body[3] = "Error message was:  " + dberrtxt(1,length)
            xcall SendEmail("ERROR: Replicator " + Settings.InstanceName + " failed to connect to database!",body,false,^null)
        end
    end

    ;Enable SQL Server Auto-Commit mode?

    if (ok)
    begin
        using Settings.CommitMode select

        (DatabaseCommitMode.Automatic),
        begin
            Logger.Log("Commit mode: AUTOMATIC")
            dbstatus = %ssc_cmd(Settings.DatabaseChannel,,SSQL_ODBC_AUTOCOMMIT,"yes")
        end

        (DatabaseCommitMode.Batch),
        begin
            Logger.Log("Commit mode: BATCH")
            Logger.VerboseLog("Start transaction")
            dbstatus = %ssc_commit(Settings.DatabaseChannel,SSQL_TXON)
            Counters.BatchCounter = 0
        end

        (DatabaseCommitMode.Manual),
        begin
            Logger.Log("Commit mode: MANUAL")
        end

        endusing
    end

    ;Report custom bulk load batch size
    if (ok)
    begin
        if (Settings.BulkLoadBatchSize > 0)
        begin
            Logger.Log("Bulk load batch size: " + %string(Settings.BulkLoadBatchSize))
        end
    end

    ;Report if data compression is enabled
    if (ok)
    begin
        using Settings.DataCompressionMode select
        (DatabaseDataCompression.None),
            Logger.Log("Compression: NONE")
        (DatabaseDataCompression.Row),
            Logger.Log("Compression: ROW")
        (DatabaseDataCompression.Page),
            Logger.Log("Compression: PAGE")
        endusing
    end

    freturn ok

endfunction

