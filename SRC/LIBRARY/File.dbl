;*****************************************************************************
;
; File:         File.dbl
;
; Description:  A File handling utility class
;
; Author:       Steve Ives, Synergex Professional Services Group
;
;*****************************************************************************
;
; Copyright (c) 2018, Synergex International, Inc.
; All rights reserved.
;
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions are met:
;
; * Redistributions of source code must retain the above copyright notice,
;   this list of conditions and the following disclaimer.
;
; * Redistributions in binary form must reproduce the above copyright notice,
;   this list of conditions and the following disclaimer in the documentation
;   and/or other materials provided with the distribution.
;
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
; POSSIBILITY OF SUCH DAMAGE.
;
;*****************************************************************************

import System.Collections

namespace ReplicationLibrary

    public class File

        ;;; <summary>
        ;;; Determines whether a file exists
        ;;; </summary>
        ;;; <param name="fileSpec">File spec of the file to check. Any valid Synergy file spec may be used.</param>
        ;;; <returns>True if the file exists, otherwise false.</returns>
        public static method Exists, boolean
            required in fileSpec, string
            endparams

            stack record
                ch, int
                ok, boolean
            endrecord
        proc
            try
            begin
                open(ch=0,i,fileSpec)
                close ch
                ok = true
            end
            catch (e, @FileInUseException)
            begin
                ok = true
            end
            catch (e, @ProtectionViolationException)
            begin
                ok = true
            end
            catch (e, @Exception)
            begin
                ok = false
            end
            endtry

            mreturn ok

        endmethod

        public static method ReadAllLines, boolean
            required in path, string
            required out records, @ArrayList
            stack record
                ch, int
                tmprec, a256
            endrecord
        proc
            records = new ArrayList()

            try
            begin
                open(ch=0,i:s,path)
                repeat
                begin
                    reads(ch,tmprec)
                    records.Add(%atrimtostring(tmprec))
                end
            end
            catch (e, @EndOfFileException)
            begin
                nop
            end
            catch (e, @Exception)
            begin
                mreturn false
            end
            finally
            begin
                if (ch && %chopen(ch))
                begin
                    close ch
                end
            end
            endtry

            mreturn true

        endmethod

        public static method WriteAllLines, void
            required in path, string
            required in records, @ArrayList
            stack record
                ch, int
                tmprec, string
            endrecord
        proc

            ;Create the file
            .ifdef OS_WINDOWS7
            open(ch=0,o:s,path)
            .endc
            .ifdef OS_UNIX
            open(ch=0,o,path)
            .endc
            .ifdef OS_VMS
            open(ch=0,o,path,OPTIONS:"/stream")
            .endc

            foreach tmprec in records
            begin
                .ifdef OS_WINDOWS7
                writes(ch,tmprec)
                .else
                puts(ch,tmprec + %char(13) + %char(10))
                .endc
            end

            close ch

        endmethod

    endclass

endnamespace
