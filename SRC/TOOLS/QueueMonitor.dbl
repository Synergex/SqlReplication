;;*****************************************************************************
;;
;; File:        QueueMonitor.dbl
;;
;; Type:        Application
;;
;; Description: Constantly displays the length of the replication queue.
;;
;;*****************************************************************************
;;
;; Copyright (c) 2008, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

import ReplicationLibrary

main QueueMonitor
    .include "WND:windows.def"
    record
        tt,             int
        qfile,          int
        tmpInstance,    a40
        instanceName,   string
        status,         i4
        system,	        i4
        runtime,        i4
        numrecs,        i4
        clock,          @StopWatch
    endrecord
proc
    xcall flags(7004000,1)
    open(tt=0,i,"tt:")
    xcall w_init(1,tt,5)
    xcall envrn(system,runtime)

    ;;Get the instance name, default to "DEFAULT"
    xcall getlog("REPLICATOR_INSTANCE",tmpInstance,status)

    if (tmpInstance) then
    begin
        upcase tmpInstance
        instanceName = %atrimtostring(tmpInstance)
    end
    else
        instanceName = "DEFAULT"

    using runtime select
    (101,104),
        xcall w_caption(WC_SET,"SQL Replicator Queue Monitor: " + instanceName)
    (),
        display(tt,$scr_clr(SCREEN),"SQL Replicator Queue Monitor: " + instanceName)
    endusing

    clock = new StopWatch()

    repeat
    begin
        open(qfile=0,"I:I","REPLICATOR_DATA:REPLICATION_" + instanceName + ".ISM")

        numrecs = %isinfo(qfile,"NUMRECS")

        if (!clock.IsRunning) then
        begin
            ;Should we start the clock?
            if (numrecs > 0)
            begin
                display(tt,$scr_pos(5,1),$scr_clr(EOL),"Timer started")
                clock.Start()
            end
        end
        else
        begin
            ;Should we stop the clock?
            if (numrecs == 0)
            begin
                clock.Stop()
                display(tt,$scr_pos(5,1),$scr_clr(EOL),"Timer stopped, queue empty at " + clock.GetElapsedTime())
            end
        end
        
        display(tt,$scr_pos(3,1),$scr_clr(EOL),"Queue length: " + %string(numrecs))
        close qfile
        sleep 1
    end


endmain